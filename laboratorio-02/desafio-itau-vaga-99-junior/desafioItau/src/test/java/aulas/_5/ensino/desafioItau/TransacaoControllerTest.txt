package aulas._5.ensino.desafioItau.controllers;

import aulas._5.ensino.desafioItau.models.Transacao;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import java.time.OffsetDateTime;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@WebMvcTest(TransacaoController.class)
public class TransacaoControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private ObjectMapper objectMapper;

    @Test
    public void criarTransacao_comDadosValidos_retorna201Created() throws Exception {
        Transacao transacao = new Transacao(100.0, OffsetDateTime.now().minusMinutes(1));
        String json = objectMapper.writeValueAsString(transacao);

        mockMvc.perform(post("/transacao")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content(json))
                .andExpect(status().isCreated());
    }

    @Test
    public void criarTransacao_comDataFutura_retorna422UnprocessableEntity() throws Exception {
        Transacao transacao = new Transacao(100.0, OffsetDateTime.now().plusMinutes(1));
        String json = objectMapper.writeValueAsString(transacao);

        mockMvc.perform(post("/transacao")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content(json))
                .andExpect(status().isUnprocessableEntity());
    }

    @Test
    public void criarTransacao_comValorNegativo_retorna422UnprocessableEntity() throws Exception {
        Transacao transacao = new Transacao(-100.0, OffsetDateTime.now().minusMinutes(1));
        String json = objectMapper.writeValueAsString(transacao);

        mockMvc.perform(post("/transacao")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content(json))
                .andExpect(status().isUnprocessableEntity());
    }

    @Test
    public void limparTransacoes_retorna200OK() throws Exception {
        mockMvc.perform(delete("/transacao"))
                .andExpect(status().isOk());
    }
}